- name: Include all variable files
  include_vars:
    dir: 'vars' #change directory if needed
    extensions:
        - yml
#
# First need to setup the SAN
#
- name: Creates a Device Manager for the Brocade SAN provider with the given hostname and credentials
  oneview_san_manager:
    config: '{{ config }}'
    state: present
    data:
      providerDisplayName: 'Brocade Network Advisor'
      connectionInfo:
        - name: Host
          value: "{{ SAN_Mgr_Host }}"
        - name: Port
          value: "{{ SAN_Mgr_Port }}"
        - name: Username
          value: "{{ SAN_Mgr_Username }}"
        - name: Password
          value: "{{ SAN_Mgr_Password }}"
        - name: UseSsl
          value: true
#
# Create Storage system with 3 pools
#
- name: Create a Storage System with 3 managed pool
  oneview_storage_system:
    config: "{{ config }}"
    state: present
    data:
        credentials:
            ip_hostname: "{{ STOR_Sys_Host }}"
            username: "{{ STOR_Sys_Username }}"
            password: "{{ STOR_Sys_Password }}"
        managedDomain: NO DOMAIN
        managedPools:
          - domain: NO DOMAIN
            type: StoragePoolV2
            name: "{{ Vol_Stor_Pool1 }}"
            deviceType: FC
          - domain: NO DOMAIN
            type: StoragePoolV2
            name: "{{ Vol_Stor_Pool5 }}"
            deviceType: FC
          - domain: NO DOMAIN
            type: StoragePoolV2
            name: "{{ Vol_Stor_Pool6 }}"
            deviceType: FC

  delegate_to: localhost
#
- name: Gather facts about SAN A
  oneview_managed_san_facts:
    config: "{{ config }}"
    name: "{{ SAN_A }}"
  delegate_to: localhost

- set_fact: SAN_A_Uri="{{ managed_sans[0].uri }}"
#
#
- name: Gather facts about SAN B
  oneview_managed_san_facts:
    config: "{{ config }}"
    name: "{{ SAN_B }}"
  delegate_to: localhost

- set_fact: SAN_B_Uri="{{ managed_sans[0].uri }}"
#
# Create a set of networks
#
- name: Create Ethernet network for VLAN DMZ
  oneview_ethernet_network:
    config: "{{ config }}"
    state: present
    data:
      name: "{{ DMZ_VLAN }}"
      vlanId: '201'
      privateNetwork: false
      smartLink: false
      purpose: Management
      bandwidth:
          maximumBandwidth: 20000
          typicalBandwidth: 2500

- name: Create Ethernet network for VLAN Management
  oneview_ethernet_network:
    config: "{{ config }}"
    state: present
    data:
      name: "{{ Man_VLAN }}"
      vlanId: '202'
      privateNetwork: false
      smartLink: false
      purpose: Management
      bandwidth:
          maximumBandwidth: 20000
          typicalBandwidth: 2500

- name: Create Ethernet network for VLAN Customer
  oneview_ethernet_network:
    config: "{{ config }}"
    state: present
    data:
      name: "{{ Cust_VLAN }}"
      vlanId: '203'
      privateNetwork: false
      smartLink: false
      purpose: Management
      bandwidth:
          maximumBandwidth: 20000
          typicalBandwidth: 2500

- name: Create Ethernet network for Management (Synergy)
  oneview_ethernet_network:
    config: "{{ config }}"
    state: present
    data:
      name: "{{ Man_NET }}"
      vlanId: '1001'
      privateNetwork: false
      smartLink: false
      purpose: Management
      bandwidth:
          maximumBandwidth: 20000
          typicalBandwidth: 2500

- name: Create Ethernet network for Deployment (Synergy)
  oneview_ethernet_network:
    config: "{{ config }}"
    state: present
    data:
      name: "{{ Deploy_NET }}"
      vlanId: '1002'
      privateNetwork: false
      smartLink: false
      purpose: Management
      bandwidth:
          maximumBandwidth: 20000
          typicalBandwidth: 2500

- name: Create Fibre Channel network
  oneview_fc_network:
    config: "{{ config }}"
    state: present
    data:
      name: "{{ NET_SAN_A }}"
      fabricType: 'FabricAttach'
      linkStabilityTime: '30'
      autoLoginRedistribution: true
      managedSanUri: "{{ SAN_A_Uri }}"

- name: Create Fibre Channel network
  oneview_fc_network:
    config: "{{ config }}"
    state: present
    data:
      name: "{{ NET_SAN_B }}"
      fabricType: 'FabricAttach'
      linkStabilityTime: '30'
      autoLoginRedistribution: true
      managedSanUri: "{{ SAN_B_Uri }}"

- name: Create a Customer Network Set
  oneview_network_set:
    config: "{{ config }}"
    state: present
    data:
      name: 'Network-Set-One-Cust'
      networkUris: #From this point on, choose the networks needed (Ethernet)
        - "{{ Cust_VLAN }}"

- name: Create a Customer Network Set
  oneview_network_set:
    config: "{{ config }}"
    state: present
    data:
      name: 'Network-Set-One-Man'
      networkUris: #From this point on, choose the networks needed (Ethernet)
        - "{{ DMZ_VLAN }}"
        - "{{ Man_VLAN }}"
#
# Gather information and store as local variables
#
- name: Gather facts about deployment network & Store variable
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    name: "{{ Deploy_NET }}"

- set_fact: NET_Deploy_Uri="{{ ethernet_networks[0].uri }}"
##
- name: Gather facts about customer VLAN network & Store variable
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    name: "{{ Cust_VLAN }}"

- set_fact: NET_VLANCust_Uri="{{ ethernet_networks[0].uri }}"
##
- name: Gather facts about Management VLAN network & Store variable
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    name: "{{ Man_VLAN }}"

- set_fact: NET_VLANMan_Uri="{{ ethernet_networks[0].uri }}"
##
- name: Gather facts about DMZ VLAN network & Store variable
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    name: "{{ DMZ_VLAN }}"

- set_fact: NET_VLANDMZ_Uri="{{ ethernet_networks[0].uri }}"
##
- name: Gather facts about San A network & Store variable
  oneview_fc_network_facts:
    config: "{{ config }}"
    name: "{{ NET_SAN_A }}"

- set_fact: NET_SAN_A_Uri="{{ fc_networks[0].uri }}"
##
- name: Gather facts about San A network & Store variable
  oneview_fc_network_facts:
    config: "{{ config }}"
    name: "{{ NET_SAN_B }}"

- set_fact: NET_SAN_B_Uri="{{ fc_networks[0].uri }}"
#
# Produce LIG
#
- name: Ensure that the Logical Interconnect Group is present
  oneview_logical_interconnect_group:
    config: "{{ config }}"
    state: present
    data:
      name: 'SYN-DBPOC-LIG'
      enclosureIndexes: [1]
      enclosureType: "{{ Encl_Type }}"
      interconnectBaySet: 3
      redundancyType: "Redundant"
#
# Now for the interconnect connections
#
      interconnectMapTemplate:
        interconnectMapEntryTemplates:
          - logicalDownlinkUri: ~
            logicalLocation:
                locationEntries:
                    - relativeValue: 3
                      type: "Bay"
                    - relativeValue: 1
                      type: "Enclosure"
            permittedInterconnectTypeName: "{{ InterconType40 }}"
          - logicalDownlinkUri: ~
            logicalLocation:
                locationEntries:
                    - relativeValue: 6
                      type: "Bay"
                    - relativeValue: 1
                      type: "Enclosure"
            permittedInterconnectTypeName: "{{ InterconType40 }}"
#
# This is the Uplink Set code. Everytime logical Port Config Infos appears, its a new uplink. For visual aid, a single '#' will be used to break up the code
#
      uplinkSets:
        - logicalPortConfigInfos:
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 6
                      type: "Bay"
                    - relativeValue: "{{ Port_Q1_1 }}"
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 6
                      type: "Bay"
                    - relativeValue: "{{ Port_Q2_1 }}"
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          name: "SAN-B-UplinkSet"
          mode: "Auto"
          networkType: "FibreChannel" #Ethernet is the other option
          networkUris:
            - "{{ NET_SAN_B_Uri }}"
#
        - logicalPortConfigInfos:
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 3
                      type: "Bay"
                    - relativeValue: "{{ Port_Q2_1 }}"
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 3
                      type: "Bay"
                    - relativeValue: "{{ Port_Q1_1 }}"
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          name: "SAN-A-UplinkSet"
          mode: "Auto"
          networkType: "FibreChannel" #Ethernet / FibreChannel are the options
          networkUris:
            - "{{ NET_SAN_A_Uri }}"
#
        - logicalPortConfigInfos:
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 3
                      type: "Bay"
                    - relativeValue: "{{ Port_Eth_FCoE_Q1_1 }}" #Ethernet + FCoE Capability
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          name: "Deployment-Uplink"
          mode: "Auto"
          networkType: "Ethernet" #Ethernet / FibreChannel are the options
          networkUris:
            - "{{ NET_Deploy_Uri }}"
#
        - logicalPortConfigInfos:
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 6
                      type: "Bay"
                    - relativeValue: "{{ Port_Eth_FCoE_Q3_1 }}" #Ethernet + FCoE Capability
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 6
                      type: "Bay"
                    - relativeValue: "{{ Port_Eth_FCoE_Q4_1 }}" #Ethernet + FCoE Capability
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 3
                      type: "Bay"
                    - relativeValue: "{{ Port_Eth_FCoE_Q3_1 }}" #Ethernet + FCoE Capability
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          - desiredSpeed: "Auto"
            logicalLocation:
                  locationEntries:
                    - relativeValue: 3
                      type: "Bay"
                    - relativeValue: "{{ Port_Eth_FCoE_Q4_1 }}" #Ethernet + FCoE Capability
                      type: "Port"
                    - relativeValue: 1
                      type: "Enclosure"
          name: "LAN-UplinkSet"
          mode: "Auto"
          networkType: "Ethernet" #Ethernet / FibreChannel are the options
          networkUris:
            - "{{ NET_VLANDMZ_Uri }}"
            - "{{ NET_VLANMan_Uri }}"
            - "{{ NET_VLANCust_Uri }}"
#
# Gather LIG information
#
- name: Gather facts about all Logical Interconnect Groups
  oneview_logical_interconnect_group_facts:
    config: "{{ config }}"
    name: "SYN-DBPOC-LIG"

- set_fact: LIG_Uri="{{ logical_interconnect_groups[0].uri }}"
#
# Create Enclosure Group
#
- name: Ensure that Enclosure Group is present using the default configuration
  oneview_enclosure_group:
    config: "{{ config }}"
    state: present
    data:
      name: "SYN-DBPOC-EG"
      description: "Insert description on Enclosure Group"
      powerMode: "RedundantPowerFeed"
      enclosureType: "{{ Encl_Type }}"
      stackingMode: "Enclosure"
      enclsoureCount: 1
      interconnectBayMappingCount: 2
      interconnectBayMappings:
        - interconnectBay: 1
        - interconnectBay: 2
        - interconnectBay: 3
          logicalInterconnectGroupUri: "{{ LIG_Uri }}"
        - interconnectBay: 4
        - interconnectBay: 5
        - interconnectBay: 6
          logicalInterconnectGroupUri: "{{ LIG_Uri }}"
#
# IP Section: Uri is the Management IP added in settings...NOT in Networks
#
      ipAddressingMode: "IpPool"
      ipRangeUris:
        - "{{ IP_Range_Uri }}"
#
# OS Deploment Settings
#
      osDeploymentSettings:
        manageOSDeployment: true
        deploymentModeSettings:
          deploymentMode: "External"
          deploymentNetworkUri: "{{ NET_Deploy_Uri }}" #Deployment Netork
#
# Gather information on Enclosure Groups
#
- name: Gather facts about all Enclosure Groups
  oneview_enclosure_group_facts:
    config: "{{ config }}"
    name: "SYN-DBPOC-EG"
  delegate_to: localhost

- set_fact: Encl_group_uri="{{ enclosure_groups[0].uri }}"
- debug: var=Encl_group_uri

- name: Gather facts about all Enclosures
  oneview_enclosure_facts:
    config: "{{ config }}"
    name: "CZ3712MP48"

- set_fact: enclosures_uri="{{ enclosures[0].uri }}"
- debug: var=enclosures_uri


- name: Create a Logical Enclosure (available only on HPE Synergy)
  oneview_logical_enclosure:
    config: "{{ config }}"
    state: present
    data:
        enclosureUris:
          - "{{ enclosures_uri }}"
        enclosureGroupUri: "{{ Encl_group_uri }}"
        name: "SYN-DBPOC-LE"
